name: darling prebuilt
on: workflow_dispatch
jobs:
  build:
    name: darling [${{matrix.arch}}-${{matrix.os}}]
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86_64 ]
        os: [ ubuntu-20.04 ]

        include:
          - os: ubuntu-20.04
            runner: ubuntu-20.04
  
    steps:
      - name: Configure runner
        run: |
          sudo apt update
          sudo apt install git cmake ninja-build xz-utils
          sudo apt install bison flex pkg-config libfuse-dev libudev-dev \
            linux-headers-generic gcc-multilib libcairo2-dev libgl1-mesa-dev libglu1-mesa-dev libtiff5-dev \
            libfreetype6-dev libelf-dev libxml2-dev libegl1-mesa-dev libfontconfig1-dev libbsd-dev \
            libxrandr-dev libxcursor-dev libgif-dev libavutil-dev libpulse-dev libavformat-dev libavcodec-dev \
            libavresample-dev libdbus-1-dev libxkbfile-dev libssl-dev
          sudo apt install python2 2&>/dev/null || true

      - name: Install clang+llvm
        shell: pwsh
        run: |
          $CLANG_LLVM_OS='${{matrix.os}}'.ToLower()
          $CLANG_LLVM_BASE_URL="https://github.com/awakecoding/llvm-prebuilt/releases/download/v2022.2.0"
          $CLANG_LLVM_NAME="clang+llvm-12.0.1-x86_64-${CLANG_LLVM_OS}"
          wget -q "${CLANG_LLVM_BASE_URL}/${CLANG_LLVM_NAME}.tar.xz"
          $LLVM_PREFIX="/opt/llvm"
          tar -xf "${CLANG_LLVM_NAME}.tar.xz" -C /tmp
          sudo mv "/tmp/${CLANG_LLVM_NAME}" $LLVM_PREFIX
          $LLVM_CONFIG="$LLVM_PREFIX/bin/llvm-config"
          $LLVM_BIN_PATH="$LLVM_PREFIX/bin"
          $LLVM_DIR="$LLVM_PREFIX/lib/cmake/llvm"
          echo "LLVM_DIR=$LLVM_DIR" >> $Env:GITHUB_ENV
          echo "LLVM_CONFIG=$LLVM_CONFIG" >> $Env:GITHUB_ENV
          echo "PATH=$LLVM_BIN_PATH$([IO.Path]::PathSeparator)$Env:PATH" >> $Env:GITHUB_ENV
          echo "CC=clang" >> $Env:GITHUB_ENV
          echo "CXX=clang++" >> $Env:GITHUB_ENV

      - name: Clone Darling
        uses: actions/checkout@v3
        with:
          repository: darlinghq/darling
          ref: master
          path: darling
          submodules: recursive
          lfs: true

      - name: Configure Darling
        run: |
          cmake -G Ninja -S darling -B darling-build \
            -DFULL_BUILD=ON \
            -DTARGET_i386=OFF \
            -DADDITIONAL_PACKAGES=ON \
            -DCMAKE_INSTALL_PREFIX="/opt/darling"

      - name: Build Darling
        run: |
          ninja -C darling-build
          ninja -C darling-build lkm

      - name: Install Darling
        run: |
          cmake --install darling-build
          sudo ninja -C darling-build lkm_install

      - name: Package Darling
        run: |
          PACKAGE_NAME="darling-${{matrix.arch}}-${{matrix.os}}"
          tar -cJf ${PACKAGE_NAME}.tar.xz -C /opt darling

      - name: Upload Darling package
        uses: actions/upload-artifact@v3
        with:
          name: darling-${{matrix.arch}}-${{matrix.os}}
          path: darling-${{matrix.arch}}-${{matrix.os}}.tar.xz
